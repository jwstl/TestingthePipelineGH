trigger:
  branches:
    include:
      - '*'

variables:
  - group: environment-settings

stages:
- stage: Build
  dependsOn: []
  jobs:
  - job: SPFx_production_build_package
    displayName: Project build & package
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      displayName: Setup Node v10.x
      inputs:
        versionSpec: 10.x
    - script: npm ci
      displayName: Resolve project dependencies with NPM
    - task: Gulp@1
      displayName: Build project
      inputs:
        workingDirectory: $(Build.Repository.LocalPath)
        targets: build
    - task: Gulp@1
      displayName: Bundle project
      inputs:
        workingDirectory: $(Build.Repository.LocalPath)
        targets: bundle
        arguments: --ship
    - task: Gulp@1
      displayName: Package project
      inputs:
        workingDirectory: $(Build.Repository.LocalPath)
        targets: package-solution
        arguments: --ship
    - script: |
        CMD_GET_SPPKG_NAME=$(find . -name '*.sppkg' -exec basename {} \;)
        echo "##vso[task.setvariable variable=SpPkgFileName;isOutput=true]${CMD_GET_SPPKG_NAME}"
      displayName: Get generated *.sppkg filename
      name: GetSharePointPackage
    - publish: $(Build.Repository.LocalPath)/sharepoint/solution/$(GetSharePointPackage.SpPkgFileName)
      displayName: Publish SharePoint package (*.sppkg)
      artifact: spfx-package
- stage: Deploy_to_Development
  dependsOn:
    - Build
  condition: and(succeeded(), not(contains(variables['Build.SourceVersionMessage'], '[skip-cd]')))
  jobs:
    - template: config/azdevops/template-job-deploy.yml
      parameters:
        name: dev_environment
        displayName: Deploy to dev site
        m365_target_site_url: $(TargetDevSite)
        m365_user_login: $(AdminUsername)
        m365_user_password: $(AdminPassword)

